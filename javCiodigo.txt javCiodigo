
    private ArrayList<Cliente> lista;
    private static RepositorioCliente instanciaRep;
//
///
    private RepositorioCliente() {
        this.lista = new ArrayList<Cliente>();
    }
//
    public static RepositorioCliente obterInstacia() {
        if (instanciaRep == null) {
            instanciaRep = new RepositorioCliente();
        }
        return instanciaRep;

    }

    public ArrayList<Cliente> listarTodos() {
        return this.lista;
    }

    public int verificarExistencia(Cliente cliente) {
        int retorno = -1;
        for (int i = 0; i < this.lista.size(); i++) {
            if (cliente.getCpf().trim().equals(this.lista.get(i).getCpf().trim())) {
                retorno = i;
                break;
            }
        }
        return retorno;

    }

    public void inserir(Cliente cliente) throws Exception {
        if (cliente == null) {
            throw new Exception(" o cliente nao foi instscisdo");
        }
        if (cliente.getCpf() == null) {
            throw new Exception(" Imformer o cpf do cliente");
        }
        if (cliente.getCpf().trim().equals("")) {
            throw new Exception("Imformer o cpf do cliente ");
        }
        if (cliente.getNome() == null) {
            throw new Exception(" Informer o nome do cliente");
        }
        if (cliente.getNome().trim().equals("")) {
            throw new Exception(" Informer o nome do cliente");
        }
        if (this.verificarExistencia(cliente) >= 0) {
            throw new Exception(" o cliente ja ta cadastrado");
        }
        this.lista.add(cliente);
    }

    public void remover(Cliente cliente) throws Exception {
        if (cliente == null) {
            throw new Exception(" O cliente nao foi intaciado");
        }
        if (cliente.getCpf() == null) {
            throw new Exception(" emforme o cpf do cliente");
        }
        if (cliente.getCpf().trim().equals("")) {
            throw new Exception("Imformer o cpf do cliente ");
        }
        if (this.verificarExistencia(cliente) == - 1) {
            throw new Exception(" o cliente ja ta cadastrado");
        }
        this.lista.remove(this.verificarExistencia(cliente));

    }

    public void atualizar(Cliente cliente) throws Exception {
        if (cliente == null) {
            throw new Exception(" O cliente nao foi intaciado");
        }
        if (cliente.getCpf() == null) {
            throw new Exception(" emforme o cpf do cliente");
        }
        if (cliente.getCpf().trim().equals("")) {
            throw new Exception("Imformer o cpf do cliente ");
        }
        if (cliente.getNome() == null) {
            throw new Exception(" Informer o nome do cliente");
        }
        if (cliente.getNome().trim().equals("")) {
            throw new Exception(" Informer o nome do cliente");
        }
        if (this.verificarExistencia(cliente) == - 1) {
            throw new Exception(" o cliente  nao cadastrado");

        }
        this.lista.set(this.verificarExistencia(cliente), cliente);

    }

    public int verificarExistencia(Cliente cliente){
        int retorno = -1;
        for (int i = 0; i < this.lista.size(); i++) {
            if (cliente.getCpf().trim().equals(this.lista.get(i).getCpf().trim())) {
                retorno = i;
                break;
            }
 